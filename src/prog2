#Returns the number squared (a^2)
function intSquared returns integer(integer a){

	a is a * a

	return a
}
#Returns the number to the power of p (b^p)
function intPower returns integer (integer b, integer p){

	integer i is 0
	from (i upto p) {
		b is b * b
	}

	return b
}

#Returns the n'th fibonacci number
function fibNumber returns integer(integer n){

	integer i is 1
	integer term1 is 0
	integer term2 is 1
	integer nextTerm

	from (i upto n) {
		nextTerm is term1 + term2
		term1 is term2
		term2 is nextTerm
	}

	return nextTerm
}

#Returns an array with n fibonacci numbers
function fibArray returns array(integer n){

    integer i is 1
    integer term1 is 0
	integer term2 is 1
	integer nextTerm
	integer array fibArr is {term2}

    from (i upto n) {
	    nextTerm is term1 + term2
	    term1 is term2
	    term2 is nextTerm
	    fibArr element i is nextTerm
	}

    return fibArr

}

/# This section
   assigns values
   to variables #/

integer array fibNums is fibArray(10)



integer fibNum1 is intPower(5) #test

integer fibNum2 is fibNums element 10 #test

integer test is fibNum1 * fibNum2

integer result is intSquared(fibNum1) + intPower(fibNum2, 3)  /# Square the 5th fibonacci number and add to it the 10th fibonacci number to the power of 3
                                                              and assign the result to an int #/

if (5=2) then {
        # body
    } else if (tds) then {
        # else if body
    } else then {
        # else body
    }
}
